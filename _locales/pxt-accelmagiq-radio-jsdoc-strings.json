{
  "accelmagiq": "A Simplified Analytic Attitude Determination Algorithm\nusing Accelerometer and Magnetometer on micro:bit.\n* It's like magic! This algorithm turns raw data into accurate and efficient quaternion estimations,\ntransforming your projects and making you go, \"Wow!\" Using the handy micro:bit, it feels like trying\nout quaternions is pure magic. AccelMagiQ brings a touch of enchantment to the technical world.\nWe hope this helps you in your learning journey and sparks your curiosity about the fascinating\nworld of quaternions.\n* \"AccelMagiQ\" refers to this amazing algorithm that combines accelerometer and magnetometer data to\ncreate precise quaternion calculations. It's a playful blend of 'acceleration', 'magnetometer', and 'magic' with\nquaternions ('Q'), making advanced concepts seem like magic!",
  "accelmagiq.bufferAsQuatArray": "Converts received buffer into an array of quaternion components.\nThis function reads the buffer, extracts quaternion components, and scales them back to their original values.\n* @param receivedBuffer - The buffer containing the quaternion data.\n@returns An array of quaternion components [w, x, y, z].",
  "accelmagiq.onRadioReceivedBuffer": "Registers code to run when the radio receives a buffer.",
  "accelmagiq.onRadioReceivedData": "Registers code to run when the radio receives quaternion data.\nNote: This function uses radio.onReceivedBuffer internally. As an alternative,\nyou can use the onRadioReceivedBuffer function.",
  "accelmagiq.sendData": "Prepares and sends quaternion data over Radio.\nThis function takes an array of quaternion components, scales each component by 10000 for precision,\nand calls the sendBuffer function to transmit the data as buffer.\n* @param q - An array containing the quaternion components [w, x, y, z]."
}